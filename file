SET DB_CLOSE_DELAY -1;         
;              
CREATE USER IF NOT EXISTS "SA" SALT 'ea65e36cdd83b138' HASH '5eae29e964051f8a8bfa10881b6c2dd9bbbc6e92bde232493308a980109e77f1' ADMIN;          
CREATE SEQUENCE "PUBLIC"."PERSON_SEQUENCE" START WITH 12;      
CREATE SEQUENCE "PUBLIC"."HIBERNATE_SEQUENCE" START WITH 182;  
CREATE SEQUENCE "PUBLIC"."SYSTEM_SEQUENCE_23FA6B3F_1A2F_42B0_9F9D_487C29C82B87" START WITH 1 BELONGS_TO_TABLE; 
CREATE SEQUENCE "PUBLIC"."SEQ_ID" START WITH 1;
CREATE MEMORY TABLE "PUBLIC"."flyway_schema_history"(
    "installed_rank" INT NOT NULL,
    "version" VARCHAR(50),
    "description" VARCHAR(200) NOT NULL,
    "type" VARCHAR(20) NOT NULL,
    "script" VARCHAR(1000) NOT NULL,
    "checksum" INT,
    "installed_by" VARCHAR(100) NOT NULL,
    "installed_on" TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    "execution_time" INT NOT NULL,
    "success" BOOLEAN NOT NULL
);         
ALTER TABLE "PUBLIC"."flyway_schema_history" ADD CONSTRAINT "PUBLIC"."flyway_schema_history_pk" PRIMARY KEY("installed_rank"); 
-- 1 +/- SELECT COUNT(*) FROM PUBLIC.flyway_schema_history;    
INSERT INTO "PUBLIC"."flyway_schema_history" VALUES
(-1, NULL, '<< Flyway Schema History table created >>', 'TABLE', '', NULL, 'SA', TIMESTAMP '2021-03-29 22:20:24.874982', 0, TRUE);         
CREATE INDEX "PUBLIC"."flyway_schema_history_s_idx" ON "PUBLIC"."flyway_schema_history"("success");            
CREATE MEMORY TABLE "PUBLIC"."DATABASECHANGELOGLOCK"(
    "ID" INT NOT NULL,
    "LOCKED" BOOLEAN NOT NULL,
    "LOCKGRANTED" TIMESTAMP,
    "LOCKEDBY" VARCHAR(255)
);        
ALTER TABLE "PUBLIC"."DATABASECHANGELOGLOCK" ADD CONSTRAINT "PUBLIC"."PK_DATABASECHANGELOGLOCK" PRIMARY KEY("ID");             
-- 1 +/- SELECT COUNT(*) FROM PUBLIC.DATABASECHANGELOGLOCK;    
INSERT INTO "PUBLIC"."DATABASECHANGELOGLOCK" VALUES
(1, FALSE, NULL, NULL);    
CREATE MEMORY TABLE "PUBLIC"."DATABASECHANGELOG"(
    "ID" VARCHAR(255) NOT NULL,
    "AUTHOR" VARCHAR(255) NOT NULL,
    "FILENAME" VARCHAR(255) NOT NULL,
    "DATEEXECUTED" TIMESTAMP NOT NULL,
    "ORDEREXECUTED" INT NOT NULL,
    "EXECTYPE" VARCHAR(10) NOT NULL,
    "MD5SUM" VARCHAR(35),
    "DESCRIPTION" VARCHAR(255),
    "COMMENTS" VARCHAR(255),
    "TAG" VARCHAR(255),
    "LIQUIBASE" VARCHAR(20),
    "CONTEXTS" VARCHAR(255),
    "LABELS" VARCHAR(255),
    "DEPLOYMENT_ID" VARCHAR(10)
);               
-- 2 +/- SELECT COUNT(*) FROM PUBLIC.DATABASECHANGELOG;        
INSERT INTO "PUBLIC"."DATABASECHANGELOG" VALUES
('raw', 'includeAll', 'db/changelog/changes/data.sql', TIMESTAMP '2021-03-29 22:20:26.23224', 1, 'EXECUTED', '8:6a35d9e03e67f96d7a823c9875402653', 'sql', '', NULL, '3.10.3', NULL, NULL, '7045626157'),
('raw', 'includeAll', 'db/changelog/changes/schema.sql', TIMESTAMP '2021-03-29 22:20:26.25498', 2, 'EXECUTED', '8:7f93e90b56d32ea6f7fd570efed4ad49', 'sql', '', NULL, '3.10.3', NULL, NULL, '7045626157');            
CREATE MEMORY TABLE "PUBLIC"."ALLERGENS"(
    "CELERY" BOOLEAN,
    "PEANUTS" BOOLEAN,
    "SESAME_SEEDS" BOOLEAN,
    "ID" BIGINT NOT NULL
); 
ALTER TABLE "PUBLIC"."ALLERGENS" ADD CONSTRAINT "PUBLIC"."CONSTRAINT_A" PRIMARY KEY("ID");     
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.ALLERGENS;
CREATE MEMORY TABLE "PUBLIC"."BANK"(
    "ID" INTEGER NOT NULL,
    "NAME" VARCHAR(255)
);     
ALTER TABLE "PUBLIC"."BANK" ADD CONSTRAINT "PUBLIC"."CONSTRAINT_1" PRIMARY KEY("ID");          
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.BANK;     
CREATE MEMORY TABLE "PUBLIC"."BANK_CUSTOMER"(
    "BANK_FK" INTEGER,
    "CUSTOMER_FK" INTEGER NOT NULL
);     
ALTER TABLE "PUBLIC"."BANK_CUSTOMER" ADD CONSTRAINT "PUBLIC"."CONSTRAINT_B" PRIMARY KEY("CUSTOMER_FK");        
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.BANK_CUSTOMER;            
CREATE MEMORY TABLE "PUBLIC"."COURSE"(
    "ID" INTEGER NOT NULL,
    "CREATED_DATE" TIMESTAMP,
    "LAST_UPDATED" TIMESTAMP,
    "NAME" VARCHAR(200) NOT NULL
);              
ALTER TABLE "PUBLIC"."COURSE" ADD CONSTRAINT "PUBLIC"."CONSTRAINT_7" PRIMARY KEY("ID");        
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.COURSE;   
CREATE MEMORY TABLE "PUBLIC"."CUSTOMER"(
    "ID" INTEGER NOT NULL,
    "NAME" VARCHAR(255)
); 
ALTER TABLE "PUBLIC"."CUSTOMER" ADD CONSTRAINT "PUBLIC"."CONSTRAINT_5" PRIMARY KEY("ID");      
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.CUSTOMER; 
CREATE MEMORY TABLE "PUBLIC"."DOG"(
    "ID" INTEGER NOT NULL,
    "AGE" INTEGER NOT NULL,
    "NAME" VARCHAR(255),
    "WEIGHT" DOUBLE NOT NULL
);            
ALTER TABLE "PUBLIC"."DOG" ADD CONSTRAINT "PUBLIC"."CONSTRAINT_10" PRIMARY KEY("ID");          
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.DOG;      
CREATE MEMORY TABLE "PUBLIC"."DOG_SECONDARY_A"(
    "ID" INTEGER NOT NULL
);   
ALTER TABLE "PUBLIC"."DOG_SECONDARY_A" ADD CONSTRAINT "PUBLIC"."CONSTRAINT_2" PRIMARY KEY("ID");               
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.DOG_SECONDARY_A;          
CREATE MEMORY TABLE "PUBLIC"."DOG_SECONDARY_B"(
    "ID" INTEGER NOT NULL
);   
ALTER TABLE "PUBLIC"."DOG_SECONDARY_B" ADD CONSTRAINT "PUBLIC"."CONSTRAINT_23" PRIMARY KEY("ID");              
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.DOG_SECONDARY_B;          
CREATE MEMORY TABLE "PUBLIC"."ENTITYA"(
    "MY_IDA" INTEGER NOT NULL,
    "STRA" VARCHAR(255)
);              
ALTER TABLE "PUBLIC"."ENTITYA" ADD CONSTRAINT "PUBLIC"."CONSTRAINT_C" PRIMARY KEY("MY_IDA");   
-- 9 +/- SELECT COUNT(*) FROM PUBLIC.ENTITYA;  
INSERT INTO "PUBLIC"."ENTITYA" VALUES
(172, 'Orbital Sciences'),
(173, 'JPL'),
(174, 'SpaceDev'),
(175, 'NASA Jet Propulsion Laboratory'),
(176, 'Bigelow Aerospace'),
(177, 'JPL'),
(178, 'Bigelow Aerospace'),
(179, 'Orbital Sciences'),
(180, 'Orbital Sciences');         
CREATE MEMORY TABLE "PUBLIC"."ENTITYB"(
    "MY_IDB" INTEGER NOT NULL,
    "STRB" VARCHAR(255)
);              
ALTER TABLE "PUBLIC"."ENTITYB" ADD CONSTRAINT "PUBLIC"."CONSTRAINT_CB" PRIMARY KEY("MY_IDB");  
-- 81 +/- SELECT COUNT(*) FROM PUBLIC.ENTITYB; 
INSERT INTO "PUBLIC"."ENTITYB" VALUES
(91, 'Frami, Frami and Frami'),
(92, 'Ritchie-Ritchie'),
(93, 'Leffler, Leffler and Leffler'),
(94, 'Ryan-Ryan'),
(95, 'Ward-Ward'),
(96, 'Parker-Parker'),
(97, 'Goyette LLC'),
(98, 'Gorczany-Gorczany'),
(99, 'Krajcik, Krajcik and Krajcik'),
(100, 'Collier, Collier and Collier'),
(101, 'Larkin, Larkin and Larkin'),
(102, 'Dicki and Sons'),
(103, 'Gislason Group'),
(104, 'Becker, Becker and Becker'),
(105, 'Huel-Huel'),
(106, 'Kertzmann and Sons'),
(107, 'Johns and Sons'),
(108, 'Smith-Smith'),
(109, 'Reinger Inc'),
(110, 'Koelpin Inc'),
(111, 'Hartmann, Hartmann and Hartmann'),
(112, 'Graham, Graham and Graham'),
(113, 'Schuster-Schuster'),
(114, 'D''Amore-D''Amore'),
(115, 'Bailey, Bailey and Bailey'),
(116, 'Robel-Robel'),
(117, 'Nicolas, Nicolas and Nicolas'),
(118, 'Skiles-Skiles'),
(119, 'Braun, Braun and Braun'),
(120, 'Welch-Welch'),
(121, 'Kassulke, Kassulke and Kassulke'),
(122, 'Mann LLC'),
(123, 'Ernser LLC'),
(124, 'Schroeder, Schroeder and Schroeder'),
(125, 'Gulgowski-Gulgowski'),
(126, 'Sawayn, Sawayn and Sawayn'),
(127, 'Kuvalis Inc'),
(128, 'Gulgowski LLC'),
(129, 'Roberts-Roberts'),
(130, 'Schowalter-Schowalter'),
(131, 'Gusikowski, Gusikowski and Gusikowski'),
(132, 'Stoltenberg-Stoltenberg'),
(133, 'Mertz, Mertz and Mertz'),
(134, 'Wilderman-Wilderman'),
(135, 'Koch and Sons'),
(136, 'McGlynn Inc'),
(137, 'Prohaska and Sons'),
(138, 'Thiel, Thiel and Thiel'),
(139, 'Wiegand, Wiegand and Wiegand'),
(140, 'Hodkiewicz-Hodkiewicz'),
(141, 'Schowalter, Schowalter and Schowalter'),
(142, 'Bauch and Sons'),
(143, 'Pouros, Pouros and Pouros'),
(144, 'Mayert-Mayert'),
(145, 'Marvin, Marvin and Marvin'),
(146, 'Daugherty, Daugherty and Daugherty'),
(147, 'Shanahan, Shanahan and Shanahan'),
(148, 'Feest-Feest'),
(149, 'Muller, Muller and Muller'),
(150, 'Reynolds-Reynolds'),
(151, 'Green Group'),
(152, 'Sporer-Sporer'),
(153, 'Ullrich LLC'),
(154, 'Quigley, Quigley and Quigley'),
(155, 'Cummerata LLC'),
(156, 'Schamberger, Schamberger and Schamberger'),
(157, 'Lynch, Lynch and Lynch'),
(158, 'Murazik Group'),
(159, 'Leannon-Leannon'),
(160, 'Tromp and Sons'),
(161, 'Upton Inc'),
(162, 'Kihn Inc'),
(163, 'Effertz-Effertz'),
(164, 'Gibson, Gibson and Gibson'),
(165, 'Yundt-Yundt'),
(166, 'Durgan-Durgan'),
(167, 'Marquardt-Marquardt'),
(168, 'Macejkovic, Macejkovic and Macejkovic'),
(169, 'Schimmel and Sons'),
(170, 'Moen, Moen and Moen'),
(171, 'Marvin LLC'); 
CREATE MEMORY TABLE "PUBLIC"."MEAL"(
    "ID" BIGINT DEFAULT NEXT VALUE FOR "PUBLIC"."SYSTEM_SEQUENCE_23FA6B3F_1A2F_42B0_9F9D_487C29C82B87" NOT NULL NULL_TO_DEFAULT SEQUENCE "PUBLIC"."SYSTEM_SEQUENCE_23FA6B3F_1A2F_42B0_9F9D_487C29C82B87",
    "DESCRIPTION" VARCHAR(255),
    "NAME" VARCHAR(255),
    "PRICE" DECIMAL(19, 2)
);          
ALTER TABLE "PUBLIC"."MEAL" ADD CONSTRAINT "PUBLIC"."CONSTRAINT_24" PRIMARY KEY("ID");         
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.MEAL;     
CREATE MEMORY TABLE "PUBLIC"."MY_JOIN_TABLE"(
    "MY_ENTITY_A_FK" INTEGER,
    "MY_ENTITY_B_FK" INTEGER NOT NULL
);           
ALTER TABLE "PUBLIC"."MY_JOIN_TABLE" ADD CONSTRAINT "PUBLIC"."CONSTRAINT_6" PRIMARY KEY("MY_ENTITY_B_FK");     
-- 81 +/- SELECT COUNT(*) FROM PUBLIC.MY_JOIN_TABLE;           
INSERT INTO "PUBLIC"."MY_JOIN_TABLE" VALUES
(172, 91),
(172, 92),
(172, 93),
(172, 94),
(172, 95),
(172, 96),
(172, 97),
(172, 98),
(172, 99),
(173, 100),
(173, 101),
(173, 102),
(173, 103),
(173, 104),
(173, 105),
(173, 106),
(173, 107),
(173, 108),
(174, 109),
(174, 110),
(174, 111),
(174, 112),
(174, 113),
(174, 114),
(174, 115),
(174, 116),
(174, 117),
(175, 118),
(175, 119),
(175, 120),
(175, 121),
(175, 122),
(175, 123),
(175, 124),
(175, 125),
(175, 126),
(176, 127),
(176, 128),
(176, 129),
(176, 130),
(176, 131),
(176, 132),
(176, 133),
(176, 134),
(176, 135),
(177, 136),
(177, 137),
(177, 138),
(177, 139),
(177, 140),
(177, 141),
(177, 142),
(177, 143),
(177, 144),
(178, 145),
(178, 146),
(178, 147),
(178, 148),
(178, 149),
(178, 150),
(178, 151),
(178, 152),
(178, 153),
(179, 154),
(179, 155),
(179, 156),
(179, 157),
(179, 158),
(179, 159),
(179, 160),
(179, 161),
(179, 162),
(180, 163),
(180, 164),
(180, 165),
(180, 166),
(180, 167),
(180, 168),
(180, 169),
(180, 170),
(180, 171); 
CREATE MEMORY TABLE "PUBLIC"."ORGANISATION"(
    "ID" INTEGER NOT NULL,
    "ADDRESS" VARCHAR(255),
    "NAME" VARCHAR(255)
); 
ALTER TABLE "PUBLIC"."ORGANISATION" ADD CONSTRAINT "PUBLIC"."CONSTRAINT_C4" PRIMARY KEY("ID"); 
-- 9 +/- SELECT COUNT(*) FROM PUBLIC.ORGANISATION;             
INSERT INTO "PUBLIC"."ORGANISATION" VALUES
(1, 'Apt. 727 124 Grant Estate, Bartellstad, WV 75026', 'Streich and Sons'),
(2, '0732 Wilford Creek, Towneland, NE 89496', 'Strosin LLC'),
(3, '91934 Willms Coves, Nolantown, IL 59507-8451', 'Rutherford Inc'),
(4, '916 Braulio Courts, Adamtown, AL 57752', 'Hand-Hand'),
(5, '62194 Rosemary Creek, North Frederiqueport, MN 83082', 'MacGyver, MacGyver and MacGyver'),
(6, 'Apt. 221 73373 Lynch Skyway, Krisport, MA 52815-8053', 'Lueilwitz, Lueilwitz and Lueilwitz'),
(7, '260 Vincent Way, Ianmouth, KS 70313', 'Kiehn, Kiehn and Kiehn'),
(8, '823 Laurence Club, New Breanahaven, MT 69680', 'Nader-Nader'),
(9, 'Suite 803 222 Muller Lake, West Sim, KS 81212', 'Murazik, Murazik and Murazik');   
CREATE MEMORY TABLE "PUBLIC"."PERSON"(
    "ID" INTEGER NOT NULL,
    "NAME" VARCHAR(255),
    "ORGANISATION_ID" INTEGER
);    
ALTER TABLE "PUBLIC"."PERSON" ADD CONSTRAINT "PUBLIC"."CONSTRAINT_8" PRIMARY KEY("ID");        
-- 81 +/- SELECT COUNT(*) FROM PUBLIC.PERSON;  
INSERT INTO "PUBLIC"."PERSON" VALUES
(10, 'Patsy Moen', 1),
(11, 'Abigail Wisozk', 1),
(12, 'Alexandro Lockman DDS', 1),
(13, 'Gerda McClure III', 1),
(14, 'Aaliyah Steuber', 1),
(15, 'Thaddeus Haag', 1),
(16, 'Delores Reichel', 1),
(17, 'Schuyler Muller', 1),
(18, 'Princess Leffler', 1),
(19, 'Alysha Prohaska', 2),
(20, 'Bessie Cronin', 2),
(21, 'Alec Prosacco III', 2),
(22, 'Adolph Wyman Jr.', 2),
(23, 'Mara Predovic', 2),
(24, 'Dr. Grace Schamberger', 2),
(25, 'Carmela McDermott II', 2),
(26, 'Mrs. Aglae Rutherford', 2),
(27, 'Dr. Sonya Ortiz', 2),
(28, 'Hettie Lang', 3),
(29, 'Lester Roob Sr.', 3),
(30, 'Christelle Ernser', 3),
(31, 'Jerel Funk', 3),
(32, 'Lue Kiehn', 3),
(33, 'Kiley Carter', 3),
(34, 'Onie Kirlin', 3),
(35, 'Rupert Maggio', 3),
(36, 'Elody Ruecker', 3),
(37, 'Alexandra Gleason', 4),
(38, 'Noah Sanford', 4),
(39, 'Dallin Hegmann', 4),
(40, 'Lance Ullrich MD', 4),
(41, 'Josiah Walker', 4),
(42, 'Janet Stanton', 4),
(43, 'Waylon Frami', 4),
(44, 'Brad Upton MD', 4),
(45, 'Elisabeth Frami', 4),
(46, 'Travon Swift', 5),
(47, 'Cletus Langosh', 5),
(48, 'Keon Kassulke V', 5),
(49, 'Mae Buckridge', 5),
(50, 'Wyatt Heathcote', 5),
(51, 'Leland Koepp', 5),
(52, 'Ms. Loma Legros', 5),
(53, 'Kaleb Dickinson', 5),
(54, 'Doyle McDermott', 5),
(55, 'Elmo Yundt Sr.', 6),
(56, 'Tito Gusikowski', 6),
(57, 'Miss Maiya Bernhard', 6),
(58, 'Carlotta Price', 6),
(59, 'Haylee Stoltenberg', 6),
(60, 'Mrs. Dayne Ullrich', 6),
(61, 'Miss Lenny Schultz', 6),
(62, 'Abdul Price PhD', 6),
(63, 'Jacklyn Moore', 6),
(64, 'Eliane Hoeger V', 7),
(65, 'Murphy Medhurst', 7),
(66, 'Pat Roob', 7),
(67, 'Libby Bauch', 7),
(68, 'Ms. Jovan Mayer', 7),
(69, 'Ulises Gleason', 7),
(70, 'Helen Casper', 7),
(71, 'Rupert Murray', 7),
(72, 'Maye Johns', 7),
(73, 'Myrl Hilpert', 8),
(74, 'Ms. Bryce Mohr', 8),
(75, 'Alvis Huel', 8),
(76, 'Griffin Kertzmann', 8),
(77, 'Caitlyn O''Conner', 8),
(78, 'Celestine Kshlerin I', 8),
(79, 'Vincent Christiansen', 8),
(80, 'Destin Kilback II', 8),
(81, 'Dean Mayert', 8),
(82, 'Guiseppe Gislason', 9),
(83, 'Eden Ritchie', 9),
(84, 'Ms. Destin Konopelski', 9),
(85, 'Lolita Hettinger', 9),
(86, 'Crawford Jast', 9),
(87, 'Muhammad Abshire', 9),
(88, 'Kari Schultz', 9),
(89, 'Mrs. Marlon McKenzie', 9),
(90, 'Leanna Wisozk', 9);              
CREATE MEMORY TABLE "PUBLIC"."PERSON_TUTORIAL"(
    "ID" INTEGER NOT NULL,
    "BIRTH_DATA" TIMESTAMP,
    "LOCATION" VARCHAR(255),
    "NAME" VARCHAR(255)
); 
ALTER TABLE "PUBLIC"."PERSON_TUTORIAL" ADD CONSTRAINT "PUBLIC"."CONSTRAINT_7A" PRIMARY KEY("ID");              
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.PERSON_TUTORIAL;          
CREATE MEMORY TABLE "PUBLIC"."PERSONJDBC"(
    "ID" INTEGER NOT NULL,
    "BIRTH_DATA" TIMESTAMP,
    "LOCATION" VARCHAR(255),
    "NAME" VARCHAR(255)
);      
ALTER TABLE "PUBLIC"."PERSONJDBC" ADD CONSTRAINT "PUBLIC"."CONSTRAINT_4" PRIMARY KEY("ID");    
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.PERSONJDBC;               
CREATE MEMORY TABLE "PUBLIC"."STUDENT"(
    "ID" INTEGER NOT NULL,
    "NAME" VARCHAR(255)
);  
ALTER TABLE "PUBLIC"."STUDENT" ADD CONSTRAINT "PUBLIC"."CONSTRAINT_BA" PRIMARY KEY("ID");      
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.STUDENT;  
CREATE MEMORY TABLE "PUBLIC"."UNIVERSITY"(
    "ID" INTEGER NOT NULL,
    "ADDRESS" VARCHAR(255),
    "NAME" VARCHAR(255)
);   
ALTER TABLE "PUBLIC"."UNIVERSITY" ADD CONSTRAINT "PUBLIC"."CONSTRAINT_28" PRIMARY KEY("ID");   
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.UNIVERSITY;               
CREATE MEMORY TABLE "PUBLIC"."UNIVERSITY_STUDENTS"(
    "UNIVERSITY_ID" INTEGER NOT NULL,
    "STUDENTS_ID" INTEGER NOT NULL
);
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.UNIVERSITY_STUDENTS;      
CREATE MEMORY TABLE "PUBLIC"."UNIVERSITY_LAZY"(
    "ID" INTEGER NOT NULL,
    "ADDRESS" VARCHAR(255),
    "NAME" VARCHAR(255)
);              
ALTER TABLE "PUBLIC"."UNIVERSITY_LAZY" ADD CONSTRAINT "PUBLIC"."CONSTRAINT_4B" PRIMARY KEY("ID");              
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.UNIVERSITY_LAZY;          
CREATE MEMORY TABLE "PUBLIC"."UNIVERSITY_LAZY_STUDENTS"(
    "UNIVERSITY_LAZY_ID" INTEGER NOT NULL,
    "STUDENTS_ID" INTEGER NOT NULL
);      
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.UNIVERSITY_LAZY_STUDENTS; 
CREATE MEMORY TABLE "PUBLIC"."USERS"(
    "ID" INTEGER NOT NULL,
    "HOUSE_NUMBER" VARCHAR(255),
    "STREET" VARCHAR(255),
    "CITY" VARCHAR(255),
    "COUNTRY" VARCHAR(255),
    "STATE" VARCHAR(255),
    "ZIP_CODE" VARCHAR(255),
    "EMAIL" VARCHAR(255),
    "FIRST_NAME" VARCHAR(255),
    "LAST_NAME" VARCHAR(255),
    "MIDDLE_NAME" VARCHAR(255)
);              
ALTER TABLE "PUBLIC"."USERS" ADD CONSTRAINT "PUBLIC"."CONSTRAINT_4D" PRIMARY KEY("ID");        
-- 1 +/- SELECT COUNT(*) FROM PUBLIC.USERS;    
INSERT INTO "PUBLIC"."USERS" VALUES
(181, '33', 'Tudorescu', 'Bucuresti', 'Romania', '----', 'xx', 'mihaiblandu@mihaiblandu.tk', 'Mihai', 'Blandu', 'Mihail'); 
ALTER TABLE "PUBLIC"."USERS" ADD CONSTRAINT "PUBLIC"."UK_6DOTKOTT2KJSP8VW4D0M25FB7" UNIQUE("EMAIL");           
ALTER TABLE "PUBLIC"."UNIVERSITY_STUDENTS" ADD CONSTRAINT "PUBLIC"."UK_K2BCFUU9VXWNX0CQ872X3A4JU" UNIQUE("STUDENTS_ID");       
ALTER TABLE "PUBLIC"."UNIVERSITY_LAZY_STUDENTS" ADD CONSTRAINT "PUBLIC"."UK_O1J848WCIWE5RM0RR9DFCO2IH" UNIQUE("STUDENTS_ID");  
ALTER TABLE "PUBLIC"."UNIVERSITY_STUDENTS" ADD CONSTRAINT "PUBLIC"."FKKQBSDIFVIFASWSO2NRDBCJJAQ" FOREIGN KEY("UNIVERSITY_ID") REFERENCES "PUBLIC"."UNIVERSITY"("ID") NOCHECK;  
ALTER TABLE "PUBLIC"."BANK_CUSTOMER" ADD CONSTRAINT "PUBLIC"."FKCGXGW5DR4WY3VCQDQS0ON8F4W" FOREIGN KEY("BANK_FK") REFERENCES "PUBLIC"."BANK"("ID") NOCHECK;    
ALTER TABLE "PUBLIC"."DOG_SECONDARY_B" ADD CONSTRAINT "PUBLIC"."FK6SC51WD9GN8ICUX5FC4PJM74G" FOREIGN KEY("ID") REFERENCES "PUBLIC"."DOG"("ID") NOCHECK;        
ALTER TABLE "PUBLIC"."MY_JOIN_TABLE" ADD CONSTRAINT "PUBLIC"."FKM8GG8GGA9Y5H2UIKQ9FUMC6PK" FOREIGN KEY("MY_ENTITY_B_FK") REFERENCES "PUBLIC"."ENTITYB"("MY_IDB") NOCHECK;      
ALTER TABLE "PUBLIC"."PERSON" ADD CONSTRAINT "PUBLIC"."FKB4BYUY8J1CQ0Q8JK0QGNJWBSN" FOREIGN KEY("ORGANISATION_ID") REFERENCES "PUBLIC"."ORGANISATION"("ID") NOCHECK;           
ALTER TABLE "PUBLIC"."UNIVERSITY_LAZY_STUDENTS" ADD CONSTRAINT "PUBLIC"."FKJYBVX68CDH1EYD6BWA19QUWG9" FOREIGN KEY("STUDENTS_ID") REFERENCES "PUBLIC"."STUDENT"("ID") NOCHECK;  
ALTER TABLE "PUBLIC"."MY_JOIN_TABLE" ADD CONSTRAINT "PUBLIC"."FKITQ920VSSDR3KQW1KGY67OT9N" FOREIGN KEY("MY_ENTITY_A_FK") REFERENCES "PUBLIC"."ENTITYA"("MY_IDA") NOCHECK;      
ALTER TABLE "PUBLIC"."UNIVERSITY_STUDENTS" ADD CONSTRAINT "PUBLIC"."FKF6A31XSOU4XIVBO0QA8NEHOEQ" FOREIGN KEY("STUDENTS_ID") REFERENCES "PUBLIC"."STUDENT"("ID") NOCHECK;       
ALTER TABLE "PUBLIC"."DOG_SECONDARY_A" ADD CONSTRAINT "PUBLIC"."FKR37VM220OA5IU646EST8NYUH6" FOREIGN KEY("ID") REFERENCES "PUBLIC"."DOG"("ID") NOCHECK;        
ALTER TABLE "PUBLIC"."BANK_CUSTOMER" ADD CONSTRAINT "PUBLIC"."FKE190U22U3299D6SW0HAVT8CIO" FOREIGN KEY("CUSTOMER_FK") REFERENCES "PUBLIC"."CUSTOMER"("ID") NOCHECK;            
ALTER TABLE "PUBLIC"."UNIVERSITY_LAZY_STUDENTS" ADD CONSTRAINT "PUBLIC"."FKID55PEUTRBV1WU3O62BWP76IO" FOREIGN KEY("UNIVERSITY_LAZY_ID") REFERENCES "PUBLIC"."UNIVERSITY_LAZY"("ID") NOCHECK;   
ALTER TABLE "PUBLIC"."ALLERGENS" ADD CONSTRAINT "PUBLIC"."FKRQ4CEOBVT0TS1E66NDX9V2IX2" FOREIGN KEY("ID") REFERENCES "PUBLIC"."MEAL"("ID") NOCHECK;             
