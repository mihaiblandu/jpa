SET DB_CLOSE_DELAY -1;         
;              
CREATE USER IF NOT EXISTS "SA" SALT '693ff363c2b99373' HASH '18e1fb0d1c167cc7897ce7866b0f44b61fec24c31a86705b294e4c89bf5e5478' ADMIN;          
CREATE SEQUENCE "PUBLIC"."PERSON_SEQUENCE" START WITH 12;      
CREATE SEQUENCE "PUBLIC"."HIBERNATE_SEQUENCE" START WITH 182;  
CREATE SEQUENCE "PUBLIC"."SYSTEM_SEQUENCE_95806D03_D5C3_4FBF_9DB0_ECAAD2F10BD5" START WITH 1 BELONGS_TO_TABLE; 
CREATE SEQUENCE "PUBLIC"."SEQ_ID" START WITH 1;
CREATE MEMORY TABLE "PUBLIC"."flyway_schema_history"(
    "installed_rank" INT NOT NULL,
    "version" VARCHAR(50),
    "description" VARCHAR(200) NOT NULL,
    "type" VARCHAR(20) NOT NULL,
    "script" VARCHAR(1000) NOT NULL,
    "checksum" INT,
    "installed_by" VARCHAR(100) NOT NULL,
    "installed_on" TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    "execution_time" INT NOT NULL,
    "success" BOOLEAN NOT NULL
);         
ALTER TABLE "PUBLIC"."flyway_schema_history" ADD CONSTRAINT "PUBLIC"."flyway_schema_history_pk" PRIMARY KEY("installed_rank"); 
-- 1 +/- SELECT COUNT(*) FROM PUBLIC.flyway_schema_history;    
INSERT INTO "PUBLIC"."flyway_schema_history" VALUES
(-1, NULL, '<< Flyway Schema History table created >>', 'TABLE', '', NULL, 'SA', TIMESTAMP '2021-03-30 00:11:07.86931', 0, TRUE);          
CREATE INDEX "PUBLIC"."flyway_schema_history_s_idx" ON "PUBLIC"."flyway_schema_history"("success");            
CREATE MEMORY TABLE "PUBLIC"."DATABASECHANGELOGLOCK"(
    "ID" INT NOT NULL,
    "LOCKED" BOOLEAN NOT NULL,
    "LOCKGRANTED" TIMESTAMP,
    "LOCKEDBY" VARCHAR(255)
);        
ALTER TABLE "PUBLIC"."DATABASECHANGELOGLOCK" ADD CONSTRAINT "PUBLIC"."PK_DATABASECHANGELOGLOCK" PRIMARY KEY("ID");             
-- 1 +/- SELECT COUNT(*) FROM PUBLIC.DATABASECHANGELOGLOCK;    
INSERT INTO "PUBLIC"."DATABASECHANGELOGLOCK" VALUES
(1, FALSE, NULL, NULL);    
CREATE MEMORY TABLE "PUBLIC"."DATABASECHANGELOG"(
    "ID" VARCHAR(255) NOT NULL,
    "AUTHOR" VARCHAR(255) NOT NULL,
    "FILENAME" VARCHAR(255) NOT NULL,
    "DATEEXECUTED" TIMESTAMP NOT NULL,
    "ORDEREXECUTED" INT NOT NULL,
    "EXECTYPE" VARCHAR(10) NOT NULL,
    "MD5SUM" VARCHAR(35),
    "DESCRIPTION" VARCHAR(255),
    "COMMENTS" VARCHAR(255),
    "TAG" VARCHAR(255),
    "LIQUIBASE" VARCHAR(20),
    "CONTEXTS" VARCHAR(255),
    "LABELS" VARCHAR(255),
    "DEPLOYMENT_ID" VARCHAR(10)
);               
-- 2 +/- SELECT COUNT(*) FROM PUBLIC.DATABASECHANGELOG;        
INSERT INTO "PUBLIC"."DATABASECHANGELOG" VALUES
('raw', 'includeAll', 'db/changelog/changes/data.sql', TIMESTAMP '2021-03-30 00:11:09.228623', 1, 'EXECUTED', '8:282acb62158489fe902d61386ea02ea5', 'sql', '', NULL, '3.10.3', NULL, NULL, '7052269150'),
('raw', 'includeAll', 'db/changelog/changes/schema.sql', TIMESTAMP '2021-03-30 00:11:09.249668', 2, 'EXECUTED', '8:7f93e90b56d32ea6f7fd570efed4ad49', 'sql', '', NULL, '3.10.3', NULL, NULL, '7052269150');          
CREATE MEMORY TABLE "PUBLIC"."ALLERGENS"(
    "CELERY" BOOLEAN,
    "PEANUTS" BOOLEAN,
    "SESAME_SEEDS" BOOLEAN,
    "ID" BIGINT NOT NULL
); 
ALTER TABLE "PUBLIC"."ALLERGENS" ADD CONSTRAINT "PUBLIC"."CONSTRAINT_A" PRIMARY KEY("ID");     
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.ALLERGENS;
CREATE MEMORY TABLE "PUBLIC"."BANK"(
    "ID" INTEGER NOT NULL,
    "NAME" VARCHAR(255)
);     
ALTER TABLE "PUBLIC"."BANK" ADD CONSTRAINT "PUBLIC"."CONSTRAINT_1" PRIMARY KEY("ID");          
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.BANK;     
CREATE MEMORY TABLE "PUBLIC"."BANK_CUSTOMER"(
    "BANK_FK" INTEGER,
    "CUSTOMER_FK" INTEGER NOT NULL
);     
ALTER TABLE "PUBLIC"."BANK_CUSTOMER" ADD CONSTRAINT "PUBLIC"."CONSTRAINT_B" PRIMARY KEY("CUSTOMER_FK");        
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.BANK_CUSTOMER;            
CREATE MEMORY TABLE "PUBLIC"."COURSE"(
    "ID" INTEGER NOT NULL,
    "CREATEDDATE" TIMESTAMP,
    "LASTUPDATED" TIMESTAMP,
    "NAME" VARCHAR(200) NOT NULL
);
ALTER TABLE "PUBLIC"."COURSE" ADD CONSTRAINT "PUBLIC"."CONSTRAINT_7" PRIMARY KEY("ID");        
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.COURSE;   
CREATE MEMORY TABLE "PUBLIC"."CUSTOMER"(
    "ID" INTEGER NOT NULL,
    "NAME" VARCHAR(255)
); 
ALTER TABLE "PUBLIC"."CUSTOMER" ADD CONSTRAINT "PUBLIC"."CONSTRAINT_5" PRIMARY KEY("ID");      
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.CUSTOMER; 
CREATE MEMORY TABLE "PUBLIC"."DOG"(
    "ID" INTEGER NOT NULL,
    "AGE" INTEGER NOT NULL,
    "NAME" VARCHAR(255),
    "WEIGHT" DOUBLE NOT NULL
);            
ALTER TABLE "PUBLIC"."DOG" ADD CONSTRAINT "PUBLIC"."CONSTRAINT_10" PRIMARY KEY("ID");          
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.DOG;      
CREATE MEMORY TABLE "PUBLIC"."DOG_SECONDARY_A"(
    "ID" INTEGER NOT NULL
);   
ALTER TABLE "PUBLIC"."DOG_SECONDARY_A" ADD CONSTRAINT "PUBLIC"."CONSTRAINT_2" PRIMARY KEY("ID");               
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.DOG_SECONDARY_A;          
CREATE MEMORY TABLE "PUBLIC"."DOG_SECONDARY_B"(
    "ID" INTEGER NOT NULL
);   
ALTER TABLE "PUBLIC"."DOG_SECONDARY_B" ADD CONSTRAINT "PUBLIC"."CONSTRAINT_23" PRIMARY KEY("ID");              
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.DOG_SECONDARY_B;          
CREATE MEMORY TABLE "PUBLIC"."ENTITYA"(
    "MY_IDA" INTEGER NOT NULL,
    "STRA" VARCHAR(255)
);              
ALTER TABLE "PUBLIC"."ENTITYA" ADD CONSTRAINT "PUBLIC"."CONSTRAINT_C" PRIMARY KEY("MY_IDA");   
-- 9 +/- SELECT COUNT(*) FROM PUBLIC.ENTITYA;  
INSERT INTO "PUBLIC"."ENTITYA" VALUES
(172, 'Virgin Galactic'),
(173, 'Blue Origin'),
(174, 'Blue Origin'),
(175, 'Bigelow Aerospace'),
(176, 'SpaceX'),
(177, 'JPL'),
(178, 'Virgin Galactic'),
(179, 'JPL'),
(180, 'JPL');   
CREATE MEMORY TABLE "PUBLIC"."ENTITYB"(
    "MY_IDB" INTEGER NOT NULL,
    "STRB" VARCHAR(255)
);              
ALTER TABLE "PUBLIC"."ENTITYB" ADD CONSTRAINT "PUBLIC"."CONSTRAINT_CB" PRIMARY KEY("MY_IDB");  
-- 81 +/- SELECT COUNT(*) FROM PUBLIC.ENTITYB; 
INSERT INTO "PUBLIC"."ENTITYB" VALUES
(91, 'Bradtke-Bradtke'),
(92, 'Volkman, Volkman and Volkman'),
(93, 'Little, Little and Little'),
(94, 'Hahn, Hahn and Hahn'),
(95, 'Howe, Howe and Howe'),
(96, 'Beer-Beer'),
(97, 'Vandervort Inc'),
(98, 'Kreiger Group'),
(99, 'Kemmer and Sons'),
(100, 'Feeney, Feeney and Feeney'),
(101, 'Kilback-Kilback'),
(102, 'Feest, Feest and Feest'),
(103, 'Padberg LLC'),
(104, 'Leannon-Leannon'),
(105, 'McGlynn, McGlynn and McGlynn'),
(106, 'Mertz, Mertz and Mertz'),
(107, 'White and Sons'),
(108, 'Schimmel Group'),
(109, 'Friesen, Friesen and Friesen'),
(110, 'Ryan Group'),
(111, 'Schoen-Schoen'),
(112, 'Herman-Herman'),
(113, 'Gerhold, Gerhold and Gerhold'),
(114, 'Hickle LLC'),
(115, 'Wilderman Group'),
(116, 'Kerluke and Sons'),
(117, 'Spinka-Spinka'),
(118, 'Waters and Sons'),
(119, 'Schinner Group'),
(120, 'Effertz-Effertz'),
(121, 'Runolfsson-Runolfsson'),
(122, 'Altenwerth, Altenwerth and Altenwerth'),
(123, 'Collier, Collier and Collier'),
(124, 'Homenick and Sons'),
(125, 'Bradtke-Bradtke'),
(126, 'Emmerich-Emmerich'),
(127, 'Hegmann, Hegmann and Hegmann'),
(128, 'Green, Green and Green'),
(129, 'Mann, Mann and Mann'),
(130, 'Howell Inc'),
(131, 'Stiedemann-Stiedemann'),
(132, 'Glover Inc'),
(133, 'Stiedemann LLC'),
(134, 'Trantow, Trantow and Trantow'),
(135, 'Johns-Johns'),
(136, 'Kerluke-Kerluke'),
(137, 'Mills, Mills and Mills'),
(138, 'Dietrich, Dietrich and Dietrich'),
(139, 'Hackett, Hackett and Hackett'),
(140, 'McDermott LLC'),
(141, 'Considine Group'),
(142, 'Kohler Inc'),
(143, 'Bosco, Bosco and Bosco'),
(144, 'Russel-Russel'),
(145, 'Purdy and Sons'),
(146, 'Bailey, Bailey and Bailey'),
(147, 'Smitham, Smitham and Smitham'),
(148, 'Walsh-Walsh'),
(149, 'Kozey-Kozey'),
(150, 'Lesch, Lesch and Lesch'),
(151, 'Terry, Terry and Terry'),
(152, 'Roberts-Roberts'),
(153, 'Welch LLC'),
(154, 'Carter, Carter and Carter'),
(155, 'Sawayn and Sons'),
(156, 'Bailey-Bailey'),
(157, 'Hegmann-Hegmann'),
(158, 'Schmitt, Schmitt and Schmitt'),
(159, 'McLaughlin Inc'),
(160, 'Farrell LLC'),
(161, 'Predovic-Predovic'),
(162, 'Parisian LLC'),
(163, 'Blanda and Sons'),
(164, 'Koepp, Koepp and Koepp'),
(165, 'Hermann, Hermann and Hermann'),
(166, 'Bergstrom Inc'),
(167, 'Lueilwitz, Lueilwitz and Lueilwitz'),
(168, 'Reilly, Reilly and Reilly'),
(169, 'Tromp-Tromp'),
(170, 'Braun-Braun'),
(171, 'Hintz, Hintz and Hintz');            
CREATE MEMORY TABLE "PUBLIC"."MEAL"(
    "ID" BIGINT DEFAULT NEXT VALUE FOR "PUBLIC"."SYSTEM_SEQUENCE_95806D03_D5C3_4FBF_9DB0_ECAAD2F10BD5" NOT NULL NULL_TO_DEFAULT SEQUENCE "PUBLIC"."SYSTEM_SEQUENCE_95806D03_D5C3_4FBF_9DB0_ECAAD2F10BD5",
    "DESCRIPTION" VARCHAR(255),
    "NAME" VARCHAR(255),
    "PRICE" DECIMAL(19, 2)
);          
ALTER TABLE "PUBLIC"."MEAL" ADD CONSTRAINT "PUBLIC"."CONSTRAINT_24" PRIMARY KEY("ID");         
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.MEAL;     
CREATE MEMORY TABLE "PUBLIC"."MY_JOIN_TABLE"(
    "MY_ENTITY_A_FK" INTEGER,
    "MY_ENTITY_B_FK" INTEGER NOT NULL
);           
ALTER TABLE "PUBLIC"."MY_JOIN_TABLE" ADD CONSTRAINT "PUBLIC"."CONSTRAINT_6" PRIMARY KEY("MY_ENTITY_B_FK");     
-- 81 +/- SELECT COUNT(*) FROM PUBLIC.MY_JOIN_TABLE;           
INSERT INTO "PUBLIC"."MY_JOIN_TABLE" VALUES
(172, 91),
(172, 92),
(172, 93),
(172, 94),
(172, 95),
(172, 96),
(172, 97),
(172, 98),
(172, 99),
(173, 100),
(173, 101),
(173, 102),
(173, 103),
(173, 104),
(173, 105),
(173, 106),
(173, 107),
(173, 108),
(174, 109),
(174, 110),
(174, 111),
(174, 112),
(174, 113),
(174, 114),
(174, 115),
(174, 116),
(174, 117),
(175, 118),
(175, 119),
(175, 120),
(175, 121),
(175, 122),
(175, 123),
(175, 124),
(175, 125),
(175, 126),
(176, 127),
(176, 128),
(176, 129),
(176, 130),
(176, 131),
(176, 132),
(176, 133),
(176, 134),
(176, 135),
(177, 136),
(177, 137),
(177, 138),
(177, 139),
(177, 140),
(177, 141),
(177, 142),
(177, 143),
(177, 144),
(178, 145),
(178, 146),
(178, 147),
(178, 148),
(178, 149),
(178, 150),
(178, 151),
(178, 152),
(178, 153),
(179, 154),
(179, 155),
(179, 156),
(179, 157),
(179, 158),
(179, 159),
(179, 160),
(179, 161),
(179, 162),
(180, 163),
(180, 164),
(180, 165),
(180, 166),
(180, 167),
(180, 168),
(180, 169),
(180, 170),
(180, 171); 
CREATE MEMORY TABLE "PUBLIC"."ORGANISATION"(
    "ID" INTEGER NOT NULL,
    "ADDRESS" VARCHAR(255),
    "NAME" VARCHAR(255)
); 
ALTER TABLE "PUBLIC"."ORGANISATION" ADD CONSTRAINT "PUBLIC"."CONSTRAINT_C4" PRIMARY KEY("ID"); 
-- 9 +/- SELECT COUNT(*) FROM PUBLIC.ORGANISATION;             
INSERT INTO "PUBLIC"."ORGANISATION" VALUES
(1, 'Suite 201 87255 Delbert Forks, Port Pearlineshire, TN 63933-1923', 'Mitchell LLC'),
(2, 'Apt. 959 991 Toy Row, Ibrahimshire, WA 64077', 'Medhurst Group'),
(3, '97082 Donnie Throughway, Kingstad, VT 26413-6774', 'Heaney Group'),
(4, 'Suite 118 020 Johnston Valleys, Turcotteshire, VA 25492', 'Brakus Inc'),
(5, '60179 Simone Station, Lefflershire, NC 38927-6651', 'Klocko and Sons'),
(6, 'Apt. 270 8969 Hollis Mountain, Rosalindamouth, VA 00105-8317', 'Sporer, Sporer and Sporer'),
(7, '9036 Cassin Place, Lornafurt, ID 87810-3843', 'Boyer Inc'),
(8, 'Suite 828 29670 Rodriguez Dale, Sporerchester, HI 66542', 'Bartell Inc'),
(9, 'Suite 997 948 Hudson Passage, Solonland, CA 48634-3015', 'Zemlak-Zemlak');               
CREATE MEMORY TABLE "PUBLIC"."PASSPORT"(
    "ID" BIGINT NOT NULL,
    "NUMBER" VARCHAR(255) NOT NULL
);       
ALTER TABLE "PUBLIC"."PASSPORT" ADD CONSTRAINT "PUBLIC"."CONSTRAINT_77" PRIMARY KEY("ID");     
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.PASSPORT; 
CREATE MEMORY TABLE "PUBLIC"."PERSON"(
    "ID" INTEGER NOT NULL,
    "NAME" VARCHAR(255),
    "ORGANISATION_ID" INTEGER
);    
ALTER TABLE "PUBLIC"."PERSON" ADD CONSTRAINT "PUBLIC"."CONSTRAINT_8" PRIMARY KEY("ID");        
-- 81 +/- SELECT COUNT(*) FROM PUBLIC.PERSON;  
INSERT INTO "PUBLIC"."PERSON" VALUES
(10, 'Wanda Hartmann', 1),
(11, 'Liam Muller', 1),
(12, 'Anastacio Dickinson PhD', 1),
(13, 'Rhea Blick', 1),
(14, 'Derick Raynor', 1),
(15, 'Craig Cummings V', 1),
(16, 'Monroe Sipes', 1),
(17, 'Reagan Anderson', 1),
(18, 'Reyna Carter', 1),
(19, 'Reva Oberbrunner', 2),
(20, 'Gregory Miller', 2),
(21, 'Douglas Schumm', 2),
(22, 'Retha Bednar', 2),
(23, 'Trace Dietrich', 2),
(24, 'Miss Randall Hauck', 2),
(25, 'Jeremy Lakin', 2),
(26, 'Seamus Mayert', 2),
(27, 'Miss Annabel Wiegand', 2),
(28, 'Dr. Leon Kris', 3),
(29, 'Jillian Douglas', 3),
(30, 'Kurt Russel Sr.', 3),
(31, 'Davion Rempel', 3),
(32, 'Jerad McGlynn', 3),
(33, 'Bobbie Gulgowski', 3),
(34, 'Miss Mekhi Durgan', 3),
(35, 'Mrs. Kane Hudson', 3),
(36, 'Cathrine Predovic PhD', 3),
(37, 'Vito Kris', 4),
(38, 'Thurman Hettinger', 4),
(39, 'Mrs. Vivian Kovacek', 4),
(40, 'Glenda Ankunding', 4),
(41, 'Abdullah Adams', 4),
(42, 'Gunnar McClure', 4),
(43, 'Edyth Nikolaus', 4),
(44, 'Marianna Ledner', 4),
(45, 'Loma Leannon', 4),
(46, 'Keshaun Ledner PhD', 5),
(47, 'Destin Cremin', 5),
(48, 'Meghan Lowe', 5),
(49, 'Jovan Kuhn II', 5),
(50, 'Melany Hessel', 5),
(51, 'Macey Corwin Jr.', 5),
(52, 'Viola Hoppe DDS', 5),
(53, 'Neoma Kassulke', 5),
(54, 'Van Witting', 5),
(55, 'Demetris Larkin', 6),
(56, 'Rose Funk Jr.', 6),
(57, 'Kelsie Witting', 6),
(58, 'Mrs. Hiram Considine', 6),
(59, 'London Runolfsdottir V', 6),
(60, 'Annalise Goldner', 6),
(61, 'Verda Morar', 6),
(62, 'Valerie Walker V', 6),
(63, 'Billy Reynolds', 6),
(64, 'Sheldon Brekke', 7),
(65, 'Polly Boehm', 7),
(66, 'Michel Carter', 7),
(67, 'Ariel Tillman', 7),
(68, 'Luz Kunde', 7),
(69, 'Cheyenne Hahn', 7),
(70, 'Tia Heidenreich', 7),
(71, 'Mallie Frami', 7),
(72, 'Mrs. Erik Johnson', 7),
(73, 'Ms. Bryon Labadie', 8),
(74, 'Alia Shields Sr.', 8),
(75, 'Mr. Abbigail Kozey', 8),
(76, 'Tad Schinner', 8),
(77, 'Alex Jast', 8),
(78, 'Dr. Bert Rogahn', 8),
(79, 'Rodolfo Kerluke', 8),
(80, 'Maryse O''Reilly Jr.', 8),
(81, 'Miss Georgiana Ondricka', 8),
(82, 'Yolanda Kautzer', 9),
(83, 'Citlalli Lesch', 9),
(84, 'Kaleigh Rath Jr.', 9),
(85, 'Stephen Jast', 9),
(86, 'Kale Haag', 9),
(87, 'Janie Kuvalis', 9),
(88, 'Leslie Conn PhD', 9),
(89, 'Rocky Bruen', 9),
(90, 'Brady Satterfield', 9);     
CREATE MEMORY TABLE "PUBLIC"."PERSON_TUTORIAL"(
    "ID" INTEGER NOT NULL,
    "BIRTH_DATA" TIMESTAMP,
    "LOCATION" VARCHAR(255),
    "NAME" VARCHAR(255)
); 
ALTER TABLE "PUBLIC"."PERSON_TUTORIAL" ADD CONSTRAINT "PUBLIC"."CONSTRAINT_7A" PRIMARY KEY("ID");              
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.PERSON_TUTORIAL;          
CREATE MEMORY TABLE "PUBLIC"."PERSONJDBC"(
    "ID" INTEGER NOT NULL,
    "BIRTH_DATA" TIMESTAMP,
    "LOCATION" VARCHAR(255),
    "NAME" VARCHAR(255)
);      
ALTER TABLE "PUBLIC"."PERSONJDBC" ADD CONSTRAINT "PUBLIC"."CONSTRAINT_4" PRIMARY KEY("ID");    
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.PERSONJDBC;               
CREATE MEMORY TABLE "PUBLIC"."STUDENT"(
    "ID" INTEGER NOT NULL,
    "NAME" VARCHAR(255)
);  
ALTER TABLE "PUBLIC"."STUDENT" ADD CONSTRAINT "PUBLIC"."CONSTRAINT_BA" PRIMARY KEY("ID");      
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.STUDENT;  
CREATE MEMORY TABLE "PUBLIC"."STUDENTB"(
    "ID" BIGINT NOT NULL,
    "CITY" VARCHAR(255),
    "LINE1" VARCHAR(255),
    "LINE2" VARCHAR(255),
    "NAME" VARCHAR(255) NOT NULL,
    "PASSPORT_ID" BIGINT
);  
ALTER TABLE "PUBLIC"."STUDENTB" ADD CONSTRAINT "PUBLIC"."CONSTRAINT_9" PRIMARY KEY("ID");      
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.STUDENTB; 
CREATE MEMORY TABLE "PUBLIC"."UNIVERSITY"(
    "ID" INTEGER NOT NULL,
    "ADDRESS" VARCHAR(255),
    "NAME" VARCHAR(255)
);   
ALTER TABLE "PUBLIC"."UNIVERSITY" ADD CONSTRAINT "PUBLIC"."CONSTRAINT_28" PRIMARY KEY("ID");   
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.UNIVERSITY;               
CREATE MEMORY TABLE "PUBLIC"."UNIVERSITY_STUDENTS"(
    "UNIVERSITY_ID" INTEGER NOT NULL,
    "STUDENTS_ID" INTEGER NOT NULL
);
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.UNIVERSITY_STUDENTS;      
CREATE MEMORY TABLE "PUBLIC"."UNIVERSITY_LAZY"(
    "ID" INTEGER NOT NULL,
    "ADDRESS" VARCHAR(255),
    "NAME" VARCHAR(255)
);              
ALTER TABLE "PUBLIC"."UNIVERSITY_LAZY" ADD CONSTRAINT "PUBLIC"."CONSTRAINT_4B" PRIMARY KEY("ID");              
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.UNIVERSITY_LAZY;          
CREATE MEMORY TABLE "PUBLIC"."UNIVERSITY_LAZY_STUDENTS"(
    "UNIVERSITY_LAZY_ID" INTEGER NOT NULL,
    "STUDENTS_ID" INTEGER NOT NULL
);      
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.UNIVERSITY_LAZY_STUDENTS; 
CREATE MEMORY TABLE "PUBLIC"."USERS"(
    "ID" INTEGER NOT NULL,
    "HOUSE_NUMBER" VARCHAR(255),
    "STREET" VARCHAR(255),
    "CITY" VARCHAR(255),
    "COUNTRY" VARCHAR(255),
    "STATE" VARCHAR(255),
    "ZIP_CODE" VARCHAR(255),
    "EMAIL" VARCHAR(255),
    "FIRST_NAME" VARCHAR(255),
    "LAST_NAME" VARCHAR(255),
    "MIDDLE_NAME" VARCHAR(255)
);              
ALTER TABLE "PUBLIC"."USERS" ADD CONSTRAINT "PUBLIC"."CONSTRAINT_4D" PRIMARY KEY("ID");        
-- 1 +/- SELECT COUNT(*) FROM PUBLIC.USERS;    
INSERT INTO "PUBLIC"."USERS" VALUES
(181, '33', 'Tudorescu', 'Bucuresti', 'Romania', '----', 'xx', 'mihaiblandu@mihaiblandu.tk', 'Mihai', 'Blandu', 'Mihail'); 
ALTER TABLE "PUBLIC"."USERS" ADD CONSTRAINT "PUBLIC"."UK_6DOTKOTT2KJSP8VW4D0M25FB7" UNIQUE("EMAIL");           
ALTER TABLE "PUBLIC"."UNIVERSITY_STUDENTS" ADD CONSTRAINT "PUBLIC"."UK_K2BCFUU9VXWNX0CQ872X3A4JU" UNIQUE("STUDENTS_ID");       
ALTER TABLE "PUBLIC"."UNIVERSITY_LAZY_STUDENTS" ADD CONSTRAINT "PUBLIC"."UK_O1J848WCIWE5RM0RR9DFCO2IH" UNIQUE("STUDENTS_ID");  
ALTER TABLE "PUBLIC"."UNIVERSITY_STUDENTS" ADD CONSTRAINT "PUBLIC"."FKKQBSDIFVIFASWSO2NRDBCJJAQ" FOREIGN KEY("UNIVERSITY_ID") REFERENCES "PUBLIC"."UNIVERSITY"("ID") NOCHECK;  
ALTER TABLE "PUBLIC"."BANK_CUSTOMER" ADD CONSTRAINT "PUBLIC"."FKCGXGW5DR4WY3VCQDQS0ON8F4W" FOREIGN KEY("BANK_FK") REFERENCES "PUBLIC"."BANK"("ID") NOCHECK;    
ALTER TABLE "PUBLIC"."DOG_SECONDARY_B" ADD CONSTRAINT "PUBLIC"."FK6SC51WD9GN8ICUX5FC4PJM74G" FOREIGN KEY("ID") REFERENCES "PUBLIC"."DOG"("ID") NOCHECK;        
ALTER TABLE "PUBLIC"."MY_JOIN_TABLE" ADD CONSTRAINT "PUBLIC"."FKM8GG8GGA9Y5H2UIKQ9FUMC6PK" FOREIGN KEY("MY_ENTITY_B_FK") REFERENCES "PUBLIC"."ENTITYB"("MY_IDB") NOCHECK;      
ALTER TABLE "PUBLIC"."PERSON" ADD CONSTRAINT "PUBLIC"."FKB4BYUY8J1CQ0Q8JK0QGNJWBSN" FOREIGN KEY("ORGANISATION_ID") REFERENCES "PUBLIC"."ORGANISATION"("ID") NOCHECK;           
ALTER TABLE "PUBLIC"."UNIVERSITY_LAZY_STUDENTS" ADD CONSTRAINT "PUBLIC"."FKJYBVX68CDH1EYD6BWA19QUWG9" FOREIGN KEY("STUDENTS_ID") REFERENCES "PUBLIC"."STUDENT"("ID") NOCHECK;  
ALTER TABLE "PUBLIC"."MY_JOIN_TABLE" ADD CONSTRAINT "PUBLIC"."FKITQ920VSSDR3KQW1KGY67OT9N" FOREIGN KEY("MY_ENTITY_A_FK") REFERENCES "PUBLIC"."ENTITYA"("MY_IDA") NOCHECK;      
ALTER TABLE "PUBLIC"."UNIVERSITY_STUDENTS" ADD CONSTRAINT "PUBLIC"."FKF6A31XSOU4XIVBO0QA8NEHOEQ" FOREIGN KEY("STUDENTS_ID") REFERENCES "PUBLIC"."STUDENT"("ID") NOCHECK;       
ALTER TABLE "PUBLIC"."DOG_SECONDARY_A" ADD CONSTRAINT "PUBLIC"."FKR37VM220OA5IU646EST8NYUH6" FOREIGN KEY("ID") REFERENCES "PUBLIC"."DOG"("ID") NOCHECK;        
ALTER TABLE "PUBLIC"."BANK_CUSTOMER" ADD CONSTRAINT "PUBLIC"."FKE190U22U3299D6SW0HAVT8CIO" FOREIGN KEY("CUSTOMER_FK") REFERENCES "PUBLIC"."CUSTOMER"("ID") NOCHECK;            
ALTER TABLE "PUBLIC"."UNIVERSITY_LAZY_STUDENTS" ADD CONSTRAINT "PUBLIC"."FKID55PEUTRBV1WU3O62BWP76IO" FOREIGN KEY("UNIVERSITY_LAZY_ID") REFERENCES "PUBLIC"."UNIVERSITY_LAZY"("ID") NOCHECK;   
ALTER TABLE "PUBLIC"."STUDENTB" ADD CONSTRAINT "PUBLIC"."FK7AMB2U1KS5DQV5N0W1CT4MA5D" FOREIGN KEY("PASSPORT_ID") REFERENCES "PUBLIC"."PASSPORT"("ID") NOCHECK; 
ALTER TABLE "PUBLIC"."ALLERGENS" ADD CONSTRAINT "PUBLIC"."FKRQ4CEOBVT0TS1E66NDX9V2IX2" FOREIGN KEY("ID") REFERENCES "PUBLIC"."MEAL"("ID") NOCHECK;             
